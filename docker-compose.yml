version: "3.8"

services:
  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./server
    ports:
      - "3050:80"
    networks:
      - node-webapp-network

  api:
    build:
      dockerfile: Dockerfile
      context: "./api"
      target: builder
    volumes:
      - ./api:/app
      - /app/node_modules
    #command: npm run start:dev
    entrypoint: ["npm", "run", "start:migrate:dev"]
    ports:
      - "3000:3000"
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=app_user
      - DB_PASSWORD=app_password
      - DB_DATABASE=app_db
    networks:
      - node-webapp-network

  client:
    # stdin_open: true
    # environment:
    #   - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
    networks:
      - node-webapp-network

  postgres:
    image: postgres:11
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d app_db -U app_user"]
      interval: 1s
      timeout: 5s
      retries: 10
    environment:
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=app_password
      - POSTGRES_DB=app_db
    networks:
      - node-webapp-network

networks:
  node-webapp-network:
    driver: bridge
